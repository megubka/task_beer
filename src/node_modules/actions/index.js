import {
    FETCH_BEERS_START,
    FETCH_BEERS_SUCCESS,
    FETCH_BEERS_FAILURE,
    LOAD_MORE_BEERS_START,
    LOAD_MORE_BEERS_SUCCESS,
    LOAD_MORE_BEERS_FAILURE,
    FETCH_BEER_BY_ID_START,
    FETCH_BEER_BY_ID_SUCCESS,
    FETCH_BEER_BY_ID_FAILURE
} from 'actionTypes'
import { getRenderedBeersLength } from 'selectors'

import { 
    fetchBeers as fetchBeersApi,
    loadMoreBeers as loadMoreBeersApi,
    fetchBeerById as fetchBeerByIdApi
} from 'api'

//after beers fetched, put the data to the store
export const fetchBeers = () => async dispatch => {
    dispatch({type: FETCH_BEERS_START})

    try {
        const beers = await fetchBeersApi()
        dispatch({
            type: FETCH_BEERS_SUCCESS,
            payload: beers
        })
    } catch (err) {
        dispatch({
            type: FETCH_BEERS_FAILURE,
            payload: err,
            error: true
        })
    }
    
}

//adding additional data
export const loadMoreBeers = () => async (dispatch, getState) => {
    const offset = getRenderedBeersLength(getState())
    dispatch({type: LOAD_MORE_BEERS_START})

    try {
        const beers = await loadMoreBeersApi({offset})
        dispatch({
            type: LOAD_MORE_BEERS_SUCCESS,
            payload: beers
        })
    } catch (err) {
        dispatch({
            type: LOAD_MORE_BEERS_FAILURE,
            payload: err,
            error: true
        })
    }
    
}

//single beer put into the store for modal
export const fetchBeerById = id => async dispatch => {
    dispatch({type: FETCH_BEER_BY_ID_START})

    try {
        const beer = await fetchBeerByIdApi(id)
        dispatch({
            type: FETCH_BEER_BY_ID_SUCCESS,
            payload: beer
        })
    } catch (err) {
        dispatch({
            type: FETCH_BEER_BY_ID_FAILURE,
            payload: err,
            error: true
        })
    }
}